GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
<class 'monai.transforms.utility.array.AddChannel'>: Class `AddChannel` has been deprecated since version 0.8. please use MetaTensor data type and monai.transforms.EnsureChannelFirst instead.





































































































Loading dataset: 100%|█████████████████████████████████████████████████████████████████████████████████████████| 740/740 [04:35<00:00,  2.68it/s]


Loading dataset: 100%|███████████████████████████████████████████████████████████████████████████████████████████| 12/12 [00:13<00:00,  1.13s/it]
[rank: 0] Global seed set to 42
Initializing distributed: GLOBAL_RANK: 0, MEMBER: 1/1
----------------------------------------------------------------------------------------------------
distributed_backend=nccl
All distributed processes registered. Starting with 1 processes
----------------------------------------------------------------------------------------------------
You are using a CUDA device ('NVIDIA RTX A6000') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
2023-04-10 14:28:40,694 - Added key: store_based_barrier_key:1 to store for rank: 0
2023-04-10 14:28:40,695 - Rank 0: Completed store-based barrier for key:store_based_barrier_key:1 with 1 nodes.
Checkpoint directory /home/GRAMES.POLYMTL.CA/lobouz/contrast_agnostic/models_unetr exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0,1,2,3]
  | Name          | Type     | Params
-------------------------------------------
0 | net           | UNETR    | 73.8 M
1 | loss_function | DiceLoss | 0
-------------------------------------------
73.8 M    Trainable params
0         Non-trainable params
73.8 M    Total params
295.318   Total estimated model params size (MB)
single channel prediction, `softmax=True` ignored.
single channel prediction, `to_onehot_y=True` ignored.
single channel prediction, `include_background=False` ignored.
It is recommended to use `self.log('val_dice', ..., sync_dist=True)` when logging on epoch level in distributed setting to accumulate the metric across devices.
It is recommended to use `self.log('val_loss', ..., sync_dist=True)` when logging on epoch level in distributed setting to accumulate the metric across devices.
Current epoch: 0
Current Mean Dice: 0.0000
Best Mean Dice: 0.0000 at Epoch: 0
----------------------------------------------------
Traceback (most recent call last):
  File "monai_main.py", line 421, in <module>
    main(args)
  File "monai_main.py", line 309, in main
    trainer.fit(pl_model)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 609, in fit
    self, self._fit_impl, model, train_dataloaders, val_dataloaders, datamodule, ckpt_path
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/call.py", line 36, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/strategies/launchers/subprocess_script.py", line 88, in launch
    return function(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1112, in _run
    results = self._run_stage()
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1191, in _run_stage
    self._run_train()
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1214, in _run_train
    self.fit_loop.run()
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/fit_loop.py", line 267, in advance
    self._outputs = self.epoch_loop.run(self._data_fetcher)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/epoch/training_epoch_loop.py", line 213, in advance
    batch_output = self.batch_loop.run(kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/batch/training_batch_loop.py", line 88, in advance
    outputs = self.optimizer_loop.run(optimizers, kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 202, in advance
    result = self._run_optimization(kwargs, self._optimizers[self.optim_progress.optimizer_position])
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 249, in _run_optimization
    self._optimizer_step(optimizer, opt_idx, kwargs.get("batch_idx", 0), closure)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 379, in _optimizer_step
    using_lbfgs=is_lbfgs,
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1356, in _call_lightning_module_hook
    output = fn(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/core/module.py", line 1742, in optimizer_step
    optimizer.step(closure=optimizer_closure)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/core/optimizer.py", line 169, in step
    step_output = self._strategy.optimizer_step(self._optimizer, self._optimizer_idx, closure, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/strategies/ddp.py", line 280, in optimizer_step
    optimizer_output = super().optimizer_step(optimizer, opt_idx, closure, model, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/strategies/strategy.py", line 235, in optimizer_step
    optimizer, model=model, optimizer_idx=opt_idx, closure=closure, **kwargs
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 119, in optimizer_step
    return optimizer.step(closure=closure, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/optim/optimizer.py", line 140, in wrapper
    out = func(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/optim/adamw.py", line 120, in step
    loss = closure()
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/plugins/precision/precision_plugin.py", line 105, in _wrap_closure
    closure_result = closure()
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 149, in __call__
    self._result = self.closure(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 135, in closure
    step_output = self._step_fn()
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/loops/optimization/optimizer_loop.py", line 419, in _training_step
    training_step_output = self.trainer._call_strategy_hook("training_step", *kwargs.values())
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/trainer/trainer.py", line 1494, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/strategies/ddp.py", line 351, in training_step
    return self.model(*args, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/parallel/distributed.py", line 1040, in forward
    output = self._run_ddp_forward(*inputs, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/parallel/distributed.py", line 1000, in _run_ddp_forward
    return module_to_run(*inputs[0], **kwargs[0])
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/pytorch_lightning/overrides/base.py", line 98, in forward
    output = self._forward_module.training_step(*inputs, **kwargs)
  File "monai_main.py", line 158, in training_step
    output = self.forward(inputs)
  File "monai_main.py", line 58, in forward
    return self.net(x)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/networks/nets/unetr.py", line 195, in forward
    x, hidden_states_out = self.vit(x_in)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/networks/nets/vit.py", line 116, in forward
    x = blk(x)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/networks/blocks/transformerblock.py", line 51, in forward
    x = x + self.attn(self.norm1(x))
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/networks/blocks/selfattention.py", line 56, in forward
    q, k, v = output[0], output[1], output[2]
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/data/meta_tensor.py", line 289, in __torch_function__
    ret = MetaTensor.update_meta(ret, func, args, kwargs)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/data/meta_tensor.py", line 237, in update_meta
    ret_meta = decollate_batch(args[0], detach=False)[batch_idx]
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/data/utils.py", line 594, in decollate_batch
    for t, m in zip(out_list, decollate_batch(batch.meta)):
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/data/utils.py", line 606, in decollate_batch
    b, non_iterable, deco = _non_zipping_check(batch, detach, pad, fill_value)
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/data/utils.py", line 507, in _non_zipping_check
    _deco = {key: decollate_batch(batch_data[key], detach, pad=pad, fill_value=fill_value) for key in batch_data}
  File "/home/GRAMES.POLYMTL.CA/lobouz/miniconda3/envs/monai-env/lib/python3.7/site-packages/monai/data/utils.py", line 507, in <dictcomp>
    _deco = {key: decollate_batch(batch_data[key], detach, pad=pad, fill_value=fill_value) for key in batch_data}